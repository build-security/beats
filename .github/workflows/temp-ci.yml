name: CloudBeat-CI

on:
  pull_request:
    branches:
      - master


env:
  K8S_MANIFEST_DIR: cloudbeat/deploy/k8s
  DEV: true
  SNAPSHOT: true
  PLATFORMS: linux/amd64
  TYPES: docker

jobs:
  build_cloudbeat:
    name: CloudBeat CI
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Add rego repo ssh key
        uses: shaunco/ssh-agent@git-repo-mapping # this action will configure git to use the right SSH key per each repo.
        with:
          ssh-private-key: |
            ${{ secrets.REGO_LIB_KEY }}
          repo-mappings: |
            github.com/elastic/csp-security-policies

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Docker build Cloudbeat
        working-directory: ./cloudbeat
        run: |
          GOOS=linux go build -v && docker build -t cloudbeat .

      - name: Unit-Test Cloudbeat
        working-directory: ./cloudbeat
        run: |
          GOOS=linux go test ./...

      - name: Get diff k8s manifests
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: ${{ env.K8S_MANIFEST_DIR }}/**

      - name: Run K8s manifest tests
        if: env.GIT_DIFF
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kubeval: v0.16.1
          command: |
            echo "Run kubeval"
            kubeval --strict ${{ env.K8S_MANIFEST_DIR }}/cloudbeat-ds.yaml

#      - name: Cache Cloudbeat
#        uses: actions/cache@v2
#        with:
#          path: ./cloudbeat/cloudbeat
#          key: ${{ github.sha }}

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Start Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.1.0-SNAPSHOT

      - name: Ensure Elasticsearch is reachable
        run: |
          curl --verbose --show-error http://localhost:9200

      - name: Setup Kind
        uses: helm/kind-action@v1.2.0

      - name: Setup Kind Cluster
        run: |
          kind create cluster --config cloudbeat/deploy/k8s/kind/kind-config.yaml

      - name: Load cloudbeat image
        run: |
          kind load docker-image cloudbeat:latest --name kind-mono

      - name: Deploy cloudbeat
        run: |
          kubectl apply -f cloudbeat/deploy/k8s/cloudbeat-ds.yaml -n kube-system

      - name: Get cloudbeat logs
        run: |
          kubectl wait --for=condition=ready pod --selector="k8s-app=cloudbeat" -n kube-system
          timeout 100 kubectl logs -f --selector="k8s-app=cloudbeat" -n kube-system

      - name: Get ES indices
        run: |
          curl -X GET "localhost:9200/_cat/indices/?v&s=index&pretty"

#
#  e2e_test:
#    needs: build_cloudbeat
#    name: End-to-End Test
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    steps:
#      - name: Check out Cloudbeat
#        uses: actions/checkout@v2
#
#      - name: Get cloudbeat from cache
#        uses: actions/cache@v2
#        with:
#          path: ./cloudbeat/cloudbeat
#          key: ${{ github.sha }}
#
#      - name: Access cloudbeat after cache
#        run: |
#          ls -a ./cloudbeat/cloudbeat
#
#      - name: Configure sysctl limits
#        run: |
#          sudo swapoff -a
#          sudo sysctl -w vm.swappiness=1
#          sudo sysctl -w fs.file-max=262144
#          sudo sysctl -w vm.max_map_count=262144
#
#      - name: Start Elasticsearch
#        uses: elastic/elastic-github-actions/elasticsearch@master
#        with:
#          stack-version: 8.1.0-SNAPSHOT
#
#      - name: Ensure Elasticsearch is reachable
#        run: |
#          curl --verbose --show-error http://localhost:9200
#
#      - name: Setup Kind
#        uses: helm/kind-action@v1.2.0
#
#      - name: Setup Kind Cluster
#        run: |
#          kind create cluster --config cloudbeat/deploy/k8s/kind/kind-config.yaml
#
#      - name: Load cloudbeat image
#        run: |
#          docker load cloudbeat/cloudbeat
#          kind load docker-image cloudbeat:latest --name kind-mono
#
#      - name: Deploy cloudbeat
#        run: |
#          kubectl apply -f deploy/k8s/cloudbeat-ds.yaml -n kube-system
