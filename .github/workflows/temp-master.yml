# Todo delete before merge to elastic/beats
name: Publish Cloudbeat & Elastic-Agent images from csp master

on:
  push:
    branches:
      - master
      - staging-update-from-upstream

env:
  CLOUDBEAT_REGISTRY: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com
  CLOUDBEAT_IMAGE_BASE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/cloudbeat
  CLOUDBEAT_IMAGE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/cloudbeat:${{ github.sha }}
  AGENT_REGISTRY: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com
  AGENT_IMAGE_BASE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/elastic-agent
  AGENT_IMAGE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/elastic-agent:${{ github.sha }}
  AWS_ECR_KEY: ${{ secrets.AWS_ECR_KEY_DEVELOP }}
  AWS_ECR_SECRET: ${{ secrets.AWS_ECR_SECRET_DEVELOP }}
  AWS_ECR_REGION: ${{ secrets.AWS_ECR_REGION_DEVELOP }}
  DEV: true
  SNAPSHOT: true
  PLATFORMS: linux/amd64
  TYPES: docker

jobs:
  publish_image_cloudbeat:
    name: Push Cloudbeat Docker image to ECR
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: add rego repo ssh key
        uses: shaunco/ssh-agent@git-repo-mapping # this action will configure git to use the right SSH key per each repo.
        with:
          ssh-private-key: |
                ${{ secrets.REGO_LIB_KEY }}
          repo-mappings: |
            github.com/elastic/csp-security-policies

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CLOUDBEAT_REGISTRY }}
          username: ${{ secrets.AWS_ECR_KEY_DEVELOP }}
          password: ${{ secrets.AWS_ECR_SECRET_DEVELOP }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup Mage
        run: |
            make mage

      - name: Build Cloudbeat Bin
        working-directory: ./cloudbeat
        run: |
            GOOS=linux go build -v && docker build -t cloudbeat .

      - name: Unit Test Cloudbeat
        working-directory: ./cloudbeat
        run: |
            GOOS=linux go test ./..

      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ env.AWS_ECR_KEY }}
          secret-access-key: ${{ env.AWS_ECR_SECRET }}
          region: ${{ env.AWS_ECR_REGION }}
          local-image: cloudbeat:latest
          # image: ${{ env.CLOUDBEAT_IMAGE }}, ${{ env.CLOUDBEAT_IMAGE_BASE}}:csp-latest
          image: cloudbeat:${{ github.sha }}, cloudbeat:csp-latest
  publish_image_agent:
    name: Push Elastic-Agent Docker image to ECR
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: add rego repo ssh key
        uses: shaunco/ssh-agent@git-repo-mapping # this action will configure git to use the right SSH key per each repo.
        with:
          ssh-private-key: |
                ${{ secrets.REGO_LIB_KEY }}
          repo-mappings: |
            github.com/elastic/csp-security-policies

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.AGENT_REGISTRY }}
          username: ${{ secrets.AWS_ECR_KEY_DEVELOP }}
          password: ${{ secrets.AWS_ECR_SECRET_DEVELOP }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup Mage
        run: |
            make mage

      - name: Package Elastic-Agent
        working-directory: ./x-pack/elastic-agent
        run: |
            DEV=true SNAPSHOT=true PLATFORMS=linux/amd64 TYPES=docker mage -v package

      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ env.AWS_ECR_KEY }}
          secret-access-key: ${{ env.AWS_ECR_SECRET }}
          region: ${{ env.AWS_ECR_REGION }}
          local-image: docker.elastic.co/beats/elastic-agent:8.1.0-SNAPSHOT
          image: elastic-agent:${{ github.sha }}, elastic-agent:csp-latest
