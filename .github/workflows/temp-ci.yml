name: CloudBeat-CI

on:
  pull_request:
    branches:
      - master

  push:
    branches:
      - staging-update-from-upstream


env:
  CLOUDBEAT_REGISTRY: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com
  CLOUDBEAT_IMAGE_BASE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/cloudbeat
  CLOUDBEAT_IMAGE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/cloudbeat:${{ github.sha }}
  AGENT_REGISTRY: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com
  AGENT_IMAGE_BASE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/elastic-agent
  AGENT_IMAGE: ${{ secrets.AWS_ECR_ID_DEVELOP }}.dkr.ecr.${{ secrets.AWS_ECR_REGION_DEVELOP }}.amazonaws.com/elastic-agent:${{ github.sha }}
  AWS_ECR_KEY: ${{ secrets.AWS_ECR_KEY_DEVELOP }}
  AWS_ECR_SECRET: ${{ secrets.AWS_ECR_SECRET_DEVELOP }}
  AWS_ECR_REGION: ${{ secrets.AWS_ECR_REGION_DEVELOP }}
  K8S_MANIFEST_DIR: cloudbeat/deploy/k8s
  DEV: true
  SNAPSHOT: true
  PLATFORMS: linux/amd64
  TYPES: docker

jobs:
  build_cloudbeat:
    name: CloudBeat CI
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: add rego repo ssh key
        uses: shaunco/ssh-agent@git-repo-mapping # this action will configure git to use the right SSH key per each repo.
        with:
          ssh-private-key: |
            ${{ secrets.REGO_LIB_KEY }}
          repo-mappings: |
            github.com/elastic/csp-security-policies

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup Mage
        run: |
          make mage

      - name: Build CloudBeat Bin
        working-directory: cloudbeat
        run: |
          GOOS=linux go build -v && docker build -t cloudbeat .

      - name: Unit Test CloudBeat
        working-directory: ./cloudbeat
        run: |
          GOOS=linux go test ./...

      - name: Get diff k8s manifests
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: ${{ env.K8S_MANIFEST_DIR }}/**

      - name: Run K8s manifest tests
        if: env.GIT_DIFF
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.18.2
          kubeval: v0.16.1
          command: |
            echo "Run kubeval"
            kubeval --strict ${{ env.K8S_MANIFEST_DIR }}/cloudbeat-ds.yaml

      - name: Cache Cloudbeat
        uses: actions/cache@v2
        with:
          path: ./cloudbeat
          key: ${{ github.sha }}

  e2e_test:
    needs: build_cloudbeat
    name: End-to-End Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Get cloudbeat from cache
        uses: actions/cache@v2
        with:
          path: ./cloudbeat
          key: ${{ github.sha }}

      - name: Access cloudbeat after cache
        run: |
          ls -a ./cloudbeat/cloudbeat

      - name: Start Elasticsearch
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Start Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.1.0-SNAPSHOT

      - name: Elasticsearch is reachable
        run: |
          curl --verbose --show-error http://localhost:9200

      - name: Setup Kind
        uses: engineerd/setup-kind@v0.5.0

      - name: Test Kind
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
